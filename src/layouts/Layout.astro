---
interface Props {
    title: string
}
import '@fontsource/instrument-serif'
import '@fontsource-variable/literata/standard.css'
import '@fontsource-variable/literata/standard-italic.css'

import { getImage } from 'astro:assets'
import background from './background.png'
const optimizedBackgroundImage = await getImage({
    src: background,
    widths: [350, 500, 600],
})
const backgrounds = optimizedBackgroundImage.srcSet.values.map(
    (value) => `url(${value.url})`
)

const { title } = Astro.props
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta
            name="description"
            content="An alternative to the Indie Hacker movement for people who care about solving problems."
        />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body>
        <slot />
    </body>
</html>
<style
    is:global
    define:vars={{
        background0: backgrounds[0],
        background1: backgrounds[1],
        background2: backgrounds[2],
    }}
>
    :root {
        --turq1: oklch(93.67% 0.0128 172.35);
        --turq2: oklch(89.92% 0.0382 213.08);
        --turq3: oklch(68.32% 0.0853 193.37);
        --turq4: oklch(49.48% 0.0807 192.6);
        --turq5: oklch(34.03% 0.0618 191.61);
        --turq6: oklch(29.81% 0.0535 192.87);
        --turq7: oklch(10% 0.0223 200.48);
        --olive1: oklch(98.24% 0.0731 111.82);
        --olive2: oklch(75.62% 0.0649 109.63);
    }

    @font-face {
        font-family: 'DxNacky-Light';
        src: url('/fonts/DxNacky-Light.otf') format('opentype');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }

    html {
        font-family: 'Literata Variable', system-ui, serif;
        background: linear-gradient(
            to bottom,
            var(--turq1) 0%,
            var(--turq2) 5%,
            var(--turq3) 20%,
            var(--turq4) 30%,
            var(--turq5) 40%,
            var(--turq6) 50%,
            var(--turq7) 60%
        );

        @media (max-width: 500px) {
            background: linear-gradient(
                to bottom,
                var(--turq1) 0%,
                var(--turq2) 5%,
                var(--turq3) 10%,
                var(--turq4) 20%,
                var(--turq5) 30%,
                var(--turq6) 50%,
                var(--turq7) 60%
            );
        }
        @media (max-width: 400px) {
            background: linear-gradient(
                to bottom,
                var(--turq1) 0%,
                var(--turq2) 5%,
                var(--turq3) 10%,
                var(--turq4) 20%,
                var(--turq5) 30%,
                var(--turq6) 50%,
                var(--turq7) 60%
            );
        }
    }

    body {
        background-image: var(--background2);
        background-position: center -30px;
        background-repeat: no-repeat;
        margin: 0;

        @media (max-width: 500px) {
            background-image: var(--background1);
            background-position: center top;
        }

        @media (max-width: 400px) {
            background-image: var(--background0);
            background-position: center 10px;
        }
    }
</style>
